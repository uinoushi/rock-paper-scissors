{"version":3,"sources":["components/Button/index.js","components/Spacer/index.js","containers/Game/changeMode.js","components/Card/index.js","components/Loading/index.js","containers/Game/shape.js","containers/Game/player.js","containers/Game/playArea.js","containers/Game/shapeList.js","config/index.js","utility/logger.js","utility/cache.js","hooks/useApi.js","components/H1/index.js","containers/Game/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","Spacer","div","Wrapper","Label","ChangeMode","disabled","label","onClickMode","restart","endgame","title","onClick","Card","Header","HeaderLabel","span","HeaderScore","Loading","props","size","Icon","Shape","icon","loading","className","Player","shape","score","PlayArea","player1","player2","NormalButton","ShapeList","shapes","onClickShape","map","key","rock","wins","paper","scissors","modes","vs","player1Label","player2Label","simulate","error","console","log","isExpired","item","now","dayjs","storedTime","timestamp","diff","store","value","a","Date","localStorage","setItem","JSON","stringify","logger","get","getItem","parse","removeItem","modeKeys","Object","keys","shapeKeys","initialState","mode","winner","getRandomShape","length","Math","random","useApi","useState","state","setState","setResult","shape1","shape2","some","populateState","cache","getCachedState","cachedState","useEffect","setTimeout","play","simulateMode","toggleMode","reStart","endGame","H1","h1","Game","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.00f61619.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Button = styled.button`\n  background-color: white;\n  border: 0;\n  border-radius: 9px;\n  cursor: pointer;\n  color: black;\n  padding: 10px 14px;\n  margin: 5px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover:not(:disabled) {\n    opacity: 0.8;\n    background-color: black;\n    color: white;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 8px;\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst Spacer = styled.div`\n  padding: 15px 0;\n`;\n\nexport default Spacer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"../../components/Button\";\nimport Spacer from \"../../components/Spacer\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    padding: 20px 0 0;\n  }\n`;\n\nconst Label = styled.div`\n  font-size: 18px;\n  margin-bottom: 16px;\n`;\n\nconst ChangeMode = ({ disabled, label, onClickMode, restart, endgame }) => (\n  <Wrapper>\n    <Label>{label}</Label>\n    <Spacer>\n      <Button title=\"change mode\" onClick={onClickMode}>\n        Change Mode\n      </Button>\n      <Button disabled={!disabled} onClick={restart}>\n        Restart\n      </Button>\n      <Button disabled={!disabled} onClick={endgame}>\n        End Game\n      </Button>\n    </Spacer>\n  </Wrapper>\n);\n\nexport default ChangeMode;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  background-color: white;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  height: 180px;\n  margin: 0 12px 12px;\n\n  @media (min-width: 768px) {\n    height: 320px;\n    margin-bottom: 0;\n    width: 320px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  text-align: center;\n  padding: 12px 12px;\n  color: black;\n  border-radius: 12px 12px 0 0;\n  border-bottom: 1px dashed lightgrey;\n`;\n\nexport const HeaderLabel = styled.span`\n  vertical-align: middle;\n  font-weight: 500;\n`;\n\nexport const HeaderScore = styled.span`\n  background-color: #f44336;\n  margin-left: auto;\n  width: 36px;\n  height: 36px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import styled from \"styled-components\";\n\nconst Loading = styled.span`\n  animation: spin 1000ms infinite linear;\n  border: 3px solid #fff;\n  border-radius: 50%;\n  border-top-color: #4b6a90;\n  display: inline-block;\n  height: 20px;\n  width: 20px;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Loading from \"../../components/Loading\";\n\nconst Wrapper = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-size: ${(props) => (props.size ? props.size : \"48px\")};\n`;\n\nconst Icon = styled.span`\n  @media (min-width: 768px) {\n    font-size: ${(props) => (props.size ? props.size : \"48px\")};\n    flex-direction: row;\n  }\n`;\n\nconst Shape = ({ size, icon, loading }) => (\n  <Wrapper\n    size={size}\n    className={!loading && icon ? `fa fa-hand-${icon}-o` : \"empty\"}\n  >\n    {!loading && !icon && (\n      <Icon size={size} className=\"fa fa-question-circle-o\"></Icon>\n    )}\n    {loading && <Loading />}\n  </Wrapper>\n);\n\nexport default Shape;\n","import React from \"react\";\n\nimport { Card, Header, HeaderLabel, HeaderScore } from \"../../components/Card\";\nimport Shape from \"./shape\";\n\nconst Player = ({ label, shape, loading, score }) => (\n  <Card>\n    <Header>\n      <HeaderLabel>{label}</HeaderLabel>\n      <HeaderScore>{score}</HeaderScore>\n    </Header>\n    <Shape size=\"80px\" icon={shape} loading={loading} />\n  </Card>\n);\n\nexport default Player;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Player from \"./player\";\n\nconst Wrapper = styled.div`\n  padding: 20px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nconst PlayArea = ({ player1, player2 }) => (\n  <Wrapper>\n    <Player {...player1} />\n    <Player {...player2} />\n  </Wrapper>\n);\n\nexport default PlayArea;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport NormalButton from \"../../components/Button\";\nimport Shape from \"./shape\";\n\nconst Wrapper = styled.div`\n  padding: 15px 0;\n  text-align: center;\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    display: inline-block;\n  }\n`;\n\nconst Button = styled(NormalButton)`\n  border-radius: 100%;\n  height: 64px;\n  padding: 0;\n  width: 64px;\n`;\n\nconst ShapeList = ({ shapes, loading, onClickShape }) => (\n  <Wrapper>\n    <ul>\n      {shapes.map((shape) => (\n        <li key={shape}>\n          <Button\n            disabled={loading}\n            title={shape}\n            onClick={() => onClickShape(shape)}\n          >\n            <Shape size=\"32px\" icon={shape} />\n          </Button>\n        </li>\n      ))}\n    </ul>\n  </Wrapper>\n);\n\nexport default ShapeList;\n","export const shapes = {\n  rock: {\n    wins: [\"scissors\"],\n  },\n  paper: {\n    wins: [\"rock\"],\n  },\n  scissors: {\n    wins: [\"paper\"],\n  },\n};\n\nexport const modes = {\n  vs: {\n    label: \"Player Vs Computer\",\n    player1Label: \"Computer\",\n    player2Label: \"Player\",\n  },\n  simulate: {\n    label: \"Computer Vs Computer\",\n    player1Label: \"Computer 1\",\n    player2Label: \"Computer 2\",\n  },\n};\n","const log = (error) => {\n  console.log(error);\n};\n\nconst start = () => {};\n\nexport default { log, start };\n","import dayjs from \"dayjs\";\nimport logger from \"./logger\";\n\nconst prefix = \"cache\";\nconst expiryInMinutes = 5;\n\nconst store = async (key, value) => {\n  try {\n    const item = {\n      value,\n      timestamp: Date.now(),\n    };\n    await localStorage.setItem(prefix + key, JSON.stringify(item));\n  } catch (error) {\n    logger.log(error);\n  }\n};\n\nconst isExpired = (item) => {\n  const now = dayjs();\n  const storedTime = dayjs(item.timestamp);\n  return now.diff(storedTime, \"minute\") > expiryInMinutes;\n};\n\nconst get = async (key) => {\n  try {\n    const value = await localStorage.getItem(prefix + key);\n    const item = JSON.parse(value);\n\n    if (!item) return null;\n\n    if (isExpired(item)) {\n      localStorage.removeItem(prefix + key);\n      return null;\n    }\n\n    return item.value;\n  } catch (error) {\n    logger.log(error);\n  }\n};\n\nexport default {\n  store,\n  get,\n};\n","import { useState, useEffect } from \"react\";\nimport { shapes, modes } from \"../config\";\nimport cache from \"../utility/cache\";\n\nconst modeKeys = Object.keys(modes);\nconst shapeKeys = Object.keys(shapes);\n\nconst initialState = {\n  mode: modeKeys[0],\n  player1: {\n    loading: false,\n    shape: null,\n    score: 0,\n  },\n  player2: {\n    loading: false,\n    shape: null,\n    score: 0,\n  },\n  winner: null,\n};\n\nexport const getRandomShape = () => {\n  return shapeKeys[(shapeKeys.length * Math.random()) << 0];\n};\n\nexport const getWinner = (shape1, shape2) => {\n  if (shape1 === shape2) return 0;\n  return shapes[shape1].wins.some((wins) => wins === shape2) ? 1 : 2;\n};\n\nconst key = \"offline\";\n\nexport const useApi = () => {\n  const [state, setState] = useState(initialState);\n\n  const play = (shape) => {\n    const shape1 = getRandomShape();\n    const shape2 = shape || getRandomShape();\n    const simulateMode = state.mode === modeKeys[1];\n\n    setState({\n      ...state,\n      player1: {\n        ...state.player1,\n        shape: shape1,\n        loading: true,\n      },\n      player2: {\n        ...state.player2,\n        shape: shape2,\n        ...(simulateMode ? { loading: true } : {}),\n      },\n    });\n  };\n\n  const setResult = () => {\n    const winner = getWinner(state.player1.shape, state.player2.shape);\n    const populateState = {\n      ...state,\n      player1: {\n        ...state.player1,\n        ...(winner === 1 ? { score: state.player1.score + 1 } : {}),\n        loading: false,\n      },\n      player2: {\n        ...state.player2,\n        ...(winner === 2 ? { score: state.player2.score + 1 } : {}),\n        loading: false,\n      },\n      winner,\n    };\n\n    setState(populateState);\n    cache.store(key, populateState);\n  };\n\n  const toggleMode = () => {\n    const mode = state.mode;\n    const populateState = {\n      ...initialState,\n      mode: mode === modeKeys[0] ? modeKeys[1] : modeKeys[0],\n    };\n\n    setState(populateState);\n    cache.store(key, populateState);\n  };\n\n  const reStart = (mode) => {\n    const populateState = {\n      ...initialState,\n      mode: mode,\n    };\n\n    setState(populateState);\n    cache.store(key, populateState);\n  };\n\n  const endGame = () => {\n    setState(initialState);\n    cache.store(key, initialState);\n  };\n\n  const getCachedState = async () => {\n    const cachedState = await cache.get(key);\n    if (!cachedState) return;\n\n    setState(cachedState);\n  };\n\n  useEffect(() => {\n    if (state.player1.loading || state.player2.loading) {\n      setTimeout(() => {\n        setResult();\n      }, 500 + Math.random() * 500);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  useEffect(() => {\n    getCachedState();\n  }, []);\n\n  return {\n    state,\n    shapes,\n    modes,\n    modeKeys,\n    shapeKeys,\n    play,\n    toggleMode,\n    reStart,\n    endGame,\n  };\n};\n","import styled from \"styled-components\";\n\nconst H1 = styled.h1`\n  font-family: \"Ubuntu\", sans-serif;\n  font-size: 1.5em;\n  font-weight: 700;\n  margin-bottom: 1rem;\n  margin-top: 0;\n  padding-top: 1rem;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 2em;\n  }\n`;\n\nexport default H1;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport ChangeMode from \"./changeMode\";\nimport PlayArea from \"./playArea\";\nimport ShapeList from \"./shapeList\";\nimport { useApi } from \"../../hooks/useApi\";\nimport NormalButton from \"../../components/Button\";\nimport Spacer from \"../../components/Spacer\";\nimport H1 from \"../../components/H1\";\n\nconst Button = styled(NormalButton)`\n  height: 64px;\n  padding: 0;\n  margin: 0;\n  width: 64px;\n  border-radius: 100%;\n`;\n\nconst Game = () => {\n  const {\n    state,\n    modes,\n    modeKeys,\n    shapeKeys,\n    play,\n    toggleMode,\n    reStart,\n    endGame,\n  } = useApi();\n\n  const { player1, player2, mode } = state;\n\n  return (\n    <>\n      <H1>Rock - Paper - Scissors</H1>\n\n      <PlayArea\n        player1={{ ...player1, label: modes[mode].player1Label }}\n        player2={{ ...player2, label: modes[mode].player2Label }}\n      />\n\n      <ChangeMode\n        onClickMode={() => toggleMode(mode)}\n        disabled={player1.score > 0 || player2.score > 0}\n        label={modes[mode].label}\n        restart={() => reStart(mode)}\n        endgame={endGame}\n      />\n\n      {mode === modeKeys[0] ? (\n        <ShapeList\n          shapes={shapeKeys}\n          loading={player1.loading || player2.loading}\n          onClickShape={(shape) => play(shape)}\n        />\n      ) : (\n        <Spacer>\n          <Button\n            disabled={player1.loading || player2.loading}\n            onClick={() => play()}\n          >\n            Play\n          </Button>\n        </Spacer>\n      )}\n    </>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nimport Game from \"./containers/Game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}